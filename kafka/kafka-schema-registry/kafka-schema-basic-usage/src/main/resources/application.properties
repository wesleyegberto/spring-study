spring.application.name=kafka-schema-basic-usage

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.kafka.bootstrap-servers=${KAFKA_URL:http://localhost:9092}

# Confluent Cloud configuration
# spring.kafka.properties.ssl.endpoint.identification.algorithm=https
# spring.kafka.properties.sasl.mechanism=PLAIN
# spring.kafka.properties.security.protocol=SASL_SSL
# spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_API_KEY}' password='${KAFKA_API_SECRET}';

# schema registry connection
spring.kafka.properties.schema.registry.url=${SCHEMA_REGISTRY_URL:http://localhost:8081}
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.schema.registry.basic.auth.user.info=${SCHEMA_REGISTRY_API_KEY}:${SCHEMA_REGISTRY_API_SECRET}

spring.kafka.person-registration.topic.name=person.registered

# producer configuration to use Avro
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

# consumer configuration to use Avro
spring.kafka.consumer.group-id=kafka-schema-basic-usage
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.enable.auto.commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.specific.avro.reader=true
spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE

